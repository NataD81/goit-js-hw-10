{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\n\nfunction createNotificationPromise(delay, state) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stateInput = form.querySelector('input[name=\"state\"]:checked');\n\n  const delay = parseInt(delayInput.value);\n  const state = stateInput.value;\n\n  const notificationPromise = createNotificationPromise(delay, state);\n\n  notificationPromise.then(\n    delay => {\n      iziToast.success({\n        title: 'Fulfilled promise',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    },\n\n    delay => {\n      iziToast.error({\n        title: 'Rejected promise',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    }\n  );\n});\n\n"],"names":["form","createNotificationPromise","delay","state","resolve","reject","event","delayInput","stateInput","iziToast"],"mappings":"uHAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3C,SAASC,EAA0BC,EAAOC,EAAO,CAC/C,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,CACH,CAEAF,EAAK,iBAAiB,SAAUM,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAaP,EAAK,cAAc,qBAAqB,EACrDQ,EAAaR,EAAK,cAAc,6BAA6B,EAE7DE,EAAQ,SAASK,EAAW,KAAK,EACjCJ,EAAQK,EAAW,MAEGP,EAA0BC,EAAOC,CAAK,EAE9C,KAClBD,GAAS,CACPO,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BP,CAAK,IAChD,CAAO,CACF,EAEDA,GAAS,CACPO,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBP,CAAK,IAC/C,CAAO,CACF,CACL,CACA,CAAC"}